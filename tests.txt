//predicates
//List(b,c)*a->b*a!=c + List(b,c)*a->b*a!=c |- List(a,c) + List(a,c)
//List(b,c)*a->b*a!=c + List(b,c)*a->b*a!=c |- 2*List(a,c)
//List(b,c)*a->b*a!=c + a->c*a!=c |- 2*List(a,c)
//ListLen(b,c)*a->b*a!=c + List(b,c)*a->b*a!=c |- 2*ListLen(a,c)
//ListLen(b,c)*a->b*x->a*a!=c*x!=c + 2*List(b,c)*a->b*x->a*a!=c*x!=c |- ListLen(x,c)
//matching
//2*a->c |- a->c + a->c
//2*a->c + 2*a->c |- a->c + 3*a->c
//3*a->b*b=d + a->b |- 2*a->b + 2*a->b*b=d
//backlinking
//ListTmp(a,b)*b->c |- a->z' * ListTmp(z',c)
//
//
//ListLenTmp(a,b)*b->c |- ListLenTmp(a,c)
//0:2,5 (linux) -> 0:0,75 (split id summand) -> 11,9 (new) -> (split conform summand)
//ListLenTmp(a,b)*ListTmp(b,c) |- ListLenTmp(a,c)
//1:20 (linux) -> 0:30 (split id summand) -> 11,9 (new) -> 0,02 (split conform summand)
//
//
//ListLenTmp(a,b)*ListTmp(b,c) + ListTmp(a,b)*ListLenTmp(b,c) |- ListLenTmp(a,c)


//List Extend by 1 pointer

ListLenTmp(a,b)*b->c |- ListLenTmp(a,c)
a->b*ListLenTmp(b,c) |- ListLenTmp(a,c)

a->b*RListLenTmp(b,c) |- RListLenTmp(a,c)
RListLenTmp(a,b)*b->c |- RListLenTmp(a,c)

//List Extend by List

ListLenTmp(a,b)*ListTmp(b,c) |- ListLenTmp(a,c)
ListTmp(a,b)*ListLenTmp(b,c) |- ListLenTmp(a,c)

RListTmp(a,b)*RListLenTmp(b,c) |- RListLenTmp(a,c)
RListLenTmp(a,b)*RList(b,c) |- RListLenTmp(a,c)